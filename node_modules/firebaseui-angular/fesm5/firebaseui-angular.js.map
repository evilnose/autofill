{"version":3,"file":"firebaseui-angular.js.map","sources":["ng://firebaseui-angular/lib/firebaseui-angular-library.service.ts","ng://firebaseui-angular/lib/firebaseui-angular-library.helper.ts","ng://firebaseui-angular/lib/firebaseui-angular-library.component.ts","ng://firebaseui-angular/lib/firebaseui-angular-library.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {AngularFireAuth} from 'angularfire2/auth';\nimport * as firebaseui from 'firebaseui';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseuiAngularLibraryService {\n  public firebaseUiInstance: firebaseui.auth.AuthUI;\n\n  constructor(angularFireAuth: AngularFireAuth) {\n    // store the firebaseui instance on the window object to prevent double initialization\n    if (!(<any>window).firebaseUiInstance) {\n      (<any>window).firebaseUiInstance = new firebaseui.auth.AuthUI(angularFireAuth.auth);\n    }\n    this.firebaseUiInstance = (<any>window).firebaseUiInstance as firebaseui.auth.AuthUI;\n  }\n}\n","\n/*\n * Created by Raphael Jenni\n * Copyright (c) 2017 Raphael Jenni\n */\n\nimport * as firebase from 'firebase/app';\nimport AuthCredential = firebase.auth.AuthCredential;\nimport User = firebase.User;\n\nexport class FirebaseUIAuthConfig {\n    providers: Array<AuthProvider | AuthProviderWithCustomConfig>;\n    method?: AuthMethods;\n    signInSuccessUrl?: string;\n    tos?: string;\n    credentialHelper?: CredentialHelper;\n}\n\nexport class FirebaseUISignInSuccess {\n    currentUser: User;\n    credential: AuthCredential;\n    redirectUrl: string;\n}\n\nexport enum CredentialHelper {\n    AccountChooser, OneTap, None\n}\n\nexport enum AuthProvider {\n    Google, Facebook, Twitter, Github, Password, Phone\n}\n\nexport interface AuthProviderWithCustomConfig {\n    provider: AuthProvider;\n    customConfig: Object;\n}\n\nexport enum AuthMethods {\n    Popup, Redirect\n}\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {\n  AuthMethods, AuthProvider,\n  AuthProviderWithCustomConfig, CredentialHelper,\n  FirebaseUIAuthConfig,\n  FirebaseUISignInSuccess\n} from './firebaseui-angular-library.helper';\nimport * as firebase from 'firebase';\nimport GoogleAuthProvider = firebase.auth.GoogleAuthProvider;\nimport FacebookAuthProvider = firebase.auth.FacebookAuthProvider;\nimport TwitterAuthProvider = firebase.auth.TwitterAuthProvider;\nimport GithubAuthProvider = firebase.auth.GithubAuthProvider;\nimport EmailAuthProvider = firebase.auth.EmailAuthProvider;\nimport PhoneAuthProvider = firebase.auth.PhoneAuthProvider;\nimport * as firebaseui from 'firebaseui';\nimport {AngularFireAuth} from 'angularfire2/auth';\nimport {FirebaseuiAngularLibraryService} from './firebaseui-angular-library.service';\n\n@Component({\n  selector: 'firebase-ui',\n  template: `\n    <div id=\"firebaseui-auth-container\"></div>`\n})\nexport class FirebaseuiAngularLibraryComponent implements OnInit, OnDestroy {\n\n  @Output('signInSuccess') signInSuccessCallback: EventEmitter<FirebaseUISignInSuccess> = new EventEmitter();\n\n  private subscription: Subscription;\n\n  private static getAuthProvider(provider: AuthProvider): string {\n    switch (provider) {\n      case AuthProvider.Google:\n        return GoogleAuthProvider.PROVIDER_ID;\n      case AuthProvider.Facebook:\n        return FacebookAuthProvider.PROVIDER_ID;\n      case AuthProvider.Twitter:\n        return TwitterAuthProvider.PROVIDER_ID;\n      case AuthProvider.Github:\n        return GithubAuthProvider.PROVIDER_ID;\n      case AuthProvider.Password:\n        return EmailAuthProvider.PROVIDER_ID;\n      case AuthProvider.Phone:\n        return PhoneAuthProvider.PROVIDER_ID;\n    }\n  }\n\n  constructor(private angularFireAuth: AngularFireAuth,\n              private firebaseUiConfig: FirebaseUIAuthConfig,\n              private firebaseUIService: FirebaseuiAngularLibraryService) {\n  }\n\n  ngOnInit(): void {\n    this.subscription = this.angularFireAuth.authState.subscribe(value => {\n      if (!value) {\n        if (this.firebaseUiConfig.providers.length !== 0) {\n          this.firebaseUIPopup();\n        } else {\n          throw new Error('There must be at least one AuthProvider.');\n        }\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (!!this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  private getUIAuthConfig(authConfig: FirebaseUIAuthConfig): Object {\n    const authProviders: Array<Object> = [];\n    for (let provider of authConfig.providers) {\n      if (!!(provider as AuthProviderWithCustomConfig).customConfig) {\n        provider = (provider as AuthProviderWithCustomConfig);\n\n        const providerWithConfig = provider.customConfig;\n        providerWithConfig['provider'] = FirebaseuiAngularLibraryComponent.getAuthProvider(provider.provider);\n\n        authProviders.push(providerWithConfig);\n      } else {\n        authProviders.push(FirebaseuiAngularLibraryComponent.getAuthProvider(provider as AuthProvider));\n      }\n    }\n\n    const tosURL = authConfig.tos ? authConfig.tos : '';\n\n    let authMethod = 'popup';\n    switch (authConfig.method) {\n      case AuthMethods.Redirect:\n        authMethod = 'redirect';\n        break;\n      case null:\n      case AuthMethods.Popup:\n      default:\n        break;\n    }\n\n    let credentialHelper;\n    switch (authConfig.credentialHelper) {\n      case CredentialHelper.None:\n        credentialHelper = firebaseui.auth.CredentialHelper.NONE;\n        break;\n      case CredentialHelper.OneTap:\n        credentialHelper = firebaseui.auth.CredentialHelper.GOOGLE_YOLO;\n        break;\n      case CredentialHelper.AccountChooser:\n      default:\n        credentialHelper = firebaseui.auth.CredentialHelper.ACCOUNT_CHOOSER_COM;\n        break;\n    }\n\n    const nativeConfiguration: FirebaseUINativeConfiguration = {\n      callbacks: {\n        signInSuccess: (currentUser, credential, redirectUrl) => {\n          this.signInSuccessCallback.emit({\n            currentUser,\n            credential,\n            redirectUrl\n          });\n          return !!authConfig.signInSuccessUrl;\n        }\n      },\n      signInFlow: authMethod,\n      signInOptions: authProviders,\n      tosUrl: tosURL,\n      credentialHelper: credentialHelper\n    };\n    if (!!authConfig.signInSuccessUrl) {\n      nativeConfiguration.signInSuccessUrl = authConfig.signInSuccessUrl;\n    }\n    return nativeConfiguration;\n  }\n\n  private firebaseUIPopup() {\n    const firebaseUiInstance = this.firebaseUIService.firebaseUiInstance;\n    firebaseUiInstance.start('#firebaseui-auth-container', this.getUIAuthConfig(this.firebaseUiConfig));\n  }\n}\n\ninterface FirebaseUINativeConfiguration {\n  callbacks?: any;\n  credentialHelper?: any;\n  queryParameterForSignInSuccessUrl?: string;\n  queryParameterForWidgetMode?: string;\n  signInFlow?: string;\n  signInOptions?: any;\n  signInSuccessUrl?: string;\n  tosUrl: string;\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {FirebaseuiAngularLibraryComponent} from './firebaseui-angular-library.component';\nimport {CommonModule} from '@angular/common';\nimport {FirebaseUIAuthConfig} from './firebaseui-angular-library.helper';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [FirebaseuiAngularLibraryComponent],\n  exports: [FirebaseuiAngularLibraryComponent]\n})\nexport class FirebaseUIModule {\n  static forRoot(firebaseUiAuthConfig: FirebaseUIAuthConfig): ModuleWithProviders {\n    return {\n      ngModule: FirebaseUIModule,\n      providers: [\n        {provide: FirebaseUIAuthConfig, useValue: firebaseUiAuthConfig}\n      ]\n    };\n  }\n}\n"],"names":["firebaseui.auth","firebase.auth","tslib_1.__values"],"mappings":"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"}
