{"version":3,"file":"firebaseui-angular.umd.js.map","sources":["ng://firebaseui-angular/lib/firebaseui-angular-library.service.ts","ng://firebaseui-angular/lib/firebaseui-angular-library.helper.ts","ng://firebaseui-angular/lib/firebaseui-angular-library.component.ts","ng://firebaseui-angular/lib/firebaseui-angular-library.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {AngularFireAuth} from 'angularfire2/auth';\nimport * as firebaseui from 'firebaseui';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseuiAngularLibraryService {\n  public firebaseUiInstance: firebaseui.auth.AuthUI;\n\n  constructor(angularFireAuth: AngularFireAuth) {\n    // store the firebaseui instance on the window object to prevent double initialization\n    if (!(<any>window).firebaseUiInstance) {\n      (<any>window).firebaseUiInstance = new firebaseui.auth.AuthUI(angularFireAuth.auth);\n    }\n    this.firebaseUiInstance = (<any>window).firebaseUiInstance as firebaseui.auth.AuthUI;\n  }\n}\n","\n/*\n * Created by Raphael Jenni\n * Copyright (c) 2017 Raphael Jenni\n */\n\nimport * as firebase from 'firebase/app';\nimport AuthCredential = firebase.auth.AuthCredential;\nimport User = firebase.User;\n\nexport class FirebaseUIAuthConfig {\n    providers: Array<AuthProvider | AuthProviderWithCustomConfig>;\n    method?: AuthMethods;\n    signInSuccessUrl?: string;\n    tos?: string;\n    credentialHelper?: CredentialHelper;\n}\n\nexport class FirebaseUISignInSuccess {\n    currentUser: User;\n    credential: AuthCredential;\n    redirectUrl: string;\n}\n\nexport enum CredentialHelper {\n    AccountChooser, OneTap, None\n}\n\nexport enum AuthProvider {\n    Google, Facebook, Twitter, Github, Password, Phone\n}\n\nexport interface AuthProviderWithCustomConfig {\n    provider: AuthProvider;\n    customConfig: Object;\n}\n\nexport enum AuthMethods {\n    Popup, Redirect\n}\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {\n  AuthMethods, AuthProvider,\n  AuthProviderWithCustomConfig, CredentialHelper,\n  FirebaseUIAuthConfig,\n  FirebaseUISignInSuccess\n} from './firebaseui-angular-library.helper';\nimport * as firebase from 'firebase';\nimport GoogleAuthProvider = firebase.auth.GoogleAuthProvider;\nimport FacebookAuthProvider = firebase.auth.FacebookAuthProvider;\nimport TwitterAuthProvider = firebase.auth.TwitterAuthProvider;\nimport GithubAuthProvider = firebase.auth.GithubAuthProvider;\nimport EmailAuthProvider = firebase.auth.EmailAuthProvider;\nimport PhoneAuthProvider = firebase.auth.PhoneAuthProvider;\nimport * as firebaseui from 'firebaseui';\nimport {AngularFireAuth} from 'angularfire2/auth';\nimport {FirebaseuiAngularLibraryService} from './firebaseui-angular-library.service';\n\n@Component({\n  selector: 'firebase-ui',\n  template: `\n    <div id=\"firebaseui-auth-container\"></div>`\n})\nexport class FirebaseuiAngularLibraryComponent implements OnInit, OnDestroy {\n\n  @Output('signInSuccess') signInSuccessCallback: EventEmitter<FirebaseUISignInSuccess> = new EventEmitter();\n\n  private subscription: Subscription;\n\n  private static getAuthProvider(provider: AuthProvider): string {\n    switch (provider) {\n      case AuthProvider.Google:\n        return GoogleAuthProvider.PROVIDER_ID;\n      case AuthProvider.Facebook:\n        return FacebookAuthProvider.PROVIDER_ID;\n      case AuthProvider.Twitter:\n        return TwitterAuthProvider.PROVIDER_ID;\n      case AuthProvider.Github:\n        return GithubAuthProvider.PROVIDER_ID;\n      case AuthProvider.Password:\n        return EmailAuthProvider.PROVIDER_ID;\n      case AuthProvider.Phone:\n        return PhoneAuthProvider.PROVIDER_ID;\n    }\n  }\n\n  constructor(private angularFireAuth: AngularFireAuth,\n              private firebaseUiConfig: FirebaseUIAuthConfig,\n              private firebaseUIService: FirebaseuiAngularLibraryService) {\n  }\n\n  ngOnInit(): void {\n    this.subscription = this.angularFireAuth.authState.subscribe(value => {\n      if (!value) {\n        if (this.firebaseUiConfig.providers.length !== 0) {\n          this.firebaseUIPopup();\n        } else {\n          throw new Error('There must be at least one AuthProvider.');\n        }\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (!!this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  private getUIAuthConfig(authConfig: FirebaseUIAuthConfig): Object {\n    const authProviders: Array<Object> = [];\n    for (let provider of authConfig.providers) {\n      if (!!(provider as AuthProviderWithCustomConfig).customConfig) {\n        provider = (provider as AuthProviderWithCustomConfig);\n\n        const providerWithConfig = provider.customConfig;\n        providerWithConfig['provider'] = FirebaseuiAngularLibraryComponent.getAuthProvider(provider.provider);\n\n        authProviders.push(providerWithConfig);\n      } else {\n        authProviders.push(FirebaseuiAngularLibraryComponent.getAuthProvider(provider as AuthProvider));\n      }\n    }\n\n    const tosURL = authConfig.tos ? authConfig.tos : '';\n\n    let authMethod = 'popup';\n    switch (authConfig.method) {\n      case AuthMethods.Redirect:\n        authMethod = 'redirect';\n        break;\n      case null:\n      case AuthMethods.Popup:\n      default:\n        break;\n    }\n\n    let credentialHelper;\n    switch (authConfig.credentialHelper) {\n      case CredentialHelper.None:\n        credentialHelper = firebaseui.auth.CredentialHelper.NONE;\n        break;\n      case CredentialHelper.OneTap:\n        credentialHelper = firebaseui.auth.CredentialHelper.GOOGLE_YOLO;\n        break;\n      case CredentialHelper.AccountChooser:\n      default:\n        credentialHelper = firebaseui.auth.CredentialHelper.ACCOUNT_CHOOSER_COM;\n        break;\n    }\n\n    const nativeConfiguration: FirebaseUINativeConfiguration = {\n      callbacks: {\n        signInSuccess: (currentUser, credential, redirectUrl) => {\n          this.signInSuccessCallback.emit({\n            currentUser,\n            credential,\n            redirectUrl\n          });\n          return !!authConfig.signInSuccessUrl;\n        }\n      },\n      signInFlow: authMethod,\n      signInOptions: authProviders,\n      tosUrl: tosURL,\n      credentialHelper: credentialHelper\n    };\n    if (!!authConfig.signInSuccessUrl) {\n      nativeConfiguration.signInSuccessUrl = authConfig.signInSuccessUrl;\n    }\n    return nativeConfiguration;\n  }\n\n  private firebaseUIPopup() {\n    const firebaseUiInstance = this.firebaseUIService.firebaseUiInstance;\n    firebaseUiInstance.start('#firebaseui-auth-container', this.getUIAuthConfig(this.firebaseUiConfig));\n  }\n}\n\ninterface FirebaseUINativeConfiguration {\n  callbacks?: any;\n  credentialHelper?: any;\n  queryParameterForSignInSuccessUrl?: string;\n  queryParameterForWidgetMode?: string;\n  signInFlow?: string;\n  signInOptions?: any;\n  signInSuccessUrl?: string;\n  tosUrl: string;\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {FirebaseuiAngularLibraryComponent} from './firebaseui-angular-library.component';\nimport {CommonModule} from '@angular/common';\nimport {FirebaseUIAuthConfig} from './firebaseui-angular-library.helper';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [FirebaseuiAngularLibraryComponent],\n  exports: [FirebaseuiAngularLibraryComponent]\n})\nexport class FirebaseUIModule {\n  static forRoot(firebaseUiAuthConfig: FirebaseUIAuthConfig): ModuleWithProviders {\n    return {\n      ngModule: FirebaseUIModule,\n      providers: [\n        {provide: FirebaseUIAuthConfig, useValue: firebaseUiAuthConfig}\n      ]\n    };\n  }\n}\n"],"names":["firebaseui.auth","Injectable","AngularFireAuth","firebase.auth","EventEmitter","tslib_1.__values","Component","Output","NgModule","CommonModule"],"mappings":"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"}
